nano-CPU32k

INSN ORDER: little endian(LE)
DATA ORDER: little endian(LE)

REGFILE: 32bit x32 + 64bit x(32+16)

ROP:
=====================================================
ATTR     RS2  |  RS1 |  RD  OPCODE
--------------+------+-------------------------------
 31..24 23..18|17..12|11..6 5..0
  8       6   |  6   |  6    6     (32 bit)
==============+======+===============================
              |      |
IMM14:        |      |
==============+======+===============================
        IMM14 |  RS1 |  RD  OPCODE
--------------+------|-------------------------------
       31..18 |17..12|11..6 5..0
         14   |  6   |  6    6     (32 bit)
==============+======+===============================
IMM18:               |
=====================+===============================
 RES        IMM18    |  RD  OPCODE
---------------------+-------------------------------
 31..30    29..12    |11..6 5..0
   2         18      |  6    6     (32 bit)
=====================+=====+=========================
REL26:                     |
===========================+=========================
                  REL26    |OPCODE
---------------------------+-------------------------
                  31..6    |5..0
                    26     | 6     (32 bit)
===========================+=========================

- ALU logic
AND
OR
XOR
LSL
LSR
ASR *

- ALU integer number
ADD *
SUB *
MUL *
DIV *
DIVU *
MOD *
MODU *
CMP

- FPU float number
FADDS *
FSUBS *
FMULS *
FDIVS *
FCMPS *
FITFS *
FFTIS *

- branch
JMP
JMP.I
BT
BF

- load/store
LDB *
LDH *
LDWU
STB *
STH *
STW
MBARR

- exception
SYSCALL
RET

- trans
MHI *
WSMR
RSMR

- seq
VENTER
VLEAVE

- atomics
LDWA *
STWA *

=============================================

ISA GROUP - BASE:
0 AND
1 AND.I
2 OR
3 OR.I
4 XOR
5 XOR.I
6 LSL
7 LSL.I
8 LSR
9 LSR.I
a JMP
b JMP.I
c CMP
d BT
e BF
f LDWU
10 STW
11 MBARR
12 SYSCALL
13 RET
14 WSMR
15 RSMR
16 VENTER
17 VLEAVE
18 JMP.LNK
19

ISA GROUP - VIRT:
1a ASR *
1b ASR.I *
1c ADD *
1d ADD.I *
1e SUB *
1f MUL *
20 DIV *
21 DIVU *
22 MOD *
23 MODU *
24 LDB *
25 LDBU *
26 LDH *
27 LDHU *
28 STB *
29 STH *
2a MHI *
2b FADDS *
2c FSUBS *
2d FMULS *
2e FDIVS *
2f FCMPS *
30 FITFS *
31 FFTIS *
32 LDWA *
33 STWA *
34
35
36
37
38
39
3a
3b
3c
3d
3e
3f


Note that, in 32bit arch, behave of LDW instruction is equal to LDWU.


Tested in step 1:
add
sub
or
and
xor
lsl
lsr
